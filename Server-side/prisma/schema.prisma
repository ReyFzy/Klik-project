datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongodb"]
}

// Definisi model User
model Users {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  email      String     @unique
  password   String
  name       String
  username   String     @unique
  picture    String?
  no_telp    String     @unique
  gender     Gender
  tgl_lahir  DateTime
  role       Role       @default(user)
  code_otp   String?
  isVerified Boolean    @default(false)
  products   Products[]
  likes      Likes[]
  reviews    Reviews[]
}

// Definisi enum Gender
enum Gender {
  L
  P
}

// Definisi enum Role
enum Role {
  owner
  admin
  user
  guest
}

// Definisi model Product
model Products {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  desc        String?
  price       Int
  quantity    Int
  store       String
  link        String
  categories  Categories   @relation(fields: [category_id], references: [id])
  category_id String       @db.ObjectId
  users       Users        @relation(fields: [user_id], references: [id])
  user_id     String       @db.ObjectId
  images      ProductImg[]
  likes       Likes[]
  reviews     Reviews[]
}

// Definisi model ProductImg
model ProductImg {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  url        String
  products   Products @relation(fields: [product_id], references: [id])
  product_id String   @db.ObjectId
}

// Definisi model Like
model Likes {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  products   Products @relation(fields: [product_id], references: [id])
  product_id String   @db.ObjectId
  users      Users    @relation(fields: [user_id], references: [id])
  user_id    String   @db.ObjectId
}

// Definisi model Category
model Categories {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  category String
  products Products[]
}

// Definisi model Review
model Reviews {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  comment    String
  rating     Float
  user       Users    @relation(fields: [user_id], references: [id])
  user_id    String   @db.ObjectId
  product    Products @relation(fields: [product_id], references: [id])
  product_id String   @db.ObjectId
}
